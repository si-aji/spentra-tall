{"version":3,"file":"/assets/themes/sneat/js/main.js","mappings":"mBAMA,IAAIA,GAEJ,WAIqBC,SAASC,iBAAiB,gBAChCC,SAAQ,SAAUC,GAC7BJ,EAAO,IAAIK,KAAKD,EAAS,CACvBE,YAAa,WACbC,eAAe,IAGjBC,OAAOC,QAAQC,gBAA0B,GACzCF,OAAOC,QAAQE,SAAWX,CAC3B,IAGiBC,SAASC,iBAAiB,uBAChCC,SAAQ,SAAAS,GAClBA,EAAKC,iBAAiB,SAAS,SAAAC,GAC7BA,EAAMC,iBACNP,OAAOC,QAAQO,iBAChB,GACF,IAGD,IAAsBC,EAAMC,EACtBC,EAgBFlB,SAASmB,eAAe,iBAjBNH,EAkBdhB,SAASmB,eAAe,eAlBJF,EAkBoB,WAEvCT,QAAQY,iBACXpB,SAASqB,cAAc,uBAAuBC,UAAUC,IAAI,UAE/D,EAtBGL,EAAU,KACdF,EAAKQ,aAAe,WAKhBN,EAHGV,QAAQY,gBAGDK,WAAWR,EAAU,GAFrBQ,WAAWR,EAAU,IAIlC,EAEDD,EAAKU,aAAe,WAElB1B,SAASqB,cAAc,uBAAuBC,UAAUK,OAAO,WAC/DC,aAAaV,EACd,GAYH,IAAIW,EAAqB7B,SAAS8B,uBAAuB,cACvDC,EAAkB/B,SAAS8B,uBAAuB,qBAAqB,GACrED,EAAmBG,OAAS,GAAKD,GACnCF,EAAmB,GAAGjB,iBAAiB,eAAe,WAChDqB,KAAKZ,cAAc,gBAAgBa,UACrCH,EAAgBI,MAAMC,QAAU,QAEhCL,EAAgBI,MAAMC,QAAU,MAEnC,IAOwB,GAAGC,MAAMC,KAAKtC,SAASC,iBAAiB,+BAChDsC,KAAI,SAAUC,GAC/B,OAAO,IAAIC,UAAUC,QAAQF,EAC9B,IAGD,IAAMG,EAA0B,SAAUC,GAC1B,oBAAVA,EAAEC,MAAwC,oBAAVD,EAAEC,KACpCD,EAAEE,OAAOC,QAAQ,mBAAmBzB,UAAUC,IAAI,UAElDqB,EAAEE,OAAOC,QAAQ,mBAAmBzB,UAAUK,OAAO,SAExD,EAE4B,GAAGU,MAAMC,KAAKtC,SAASC,iBAAiB,eAC1BsC,KAAI,SAAUS,GACvDA,EAAmBpC,iBAAiB,mBAAoB+B,GACxDK,EAAmBpC,iBAAiB,mBAAoB+B,EACzD,IAGDpC,OAAOC,QAAQyC,eAAc,GAG7B1C,OAAOC,QAAQ0C,qBAGf3C,OAAOC,QAAQ2C,mBAMX5C,OAAOC,QAAQY,iBAOnBb,OAAOC,QAAQ4C,cAAa,GAAM,EA5GpC,G","sources":["webpack:///./resources/themes/sneat/assets/js/main.js"],"sourcesContent":["/**\n * Main\n */\n\n'use strict';\n\nlet menu, animate;\n\n(function () {\n  // Initialize menu\n  //-----------------\n\n  let layoutMenuEl = document.querySelectorAll('#layout-menu');\n  layoutMenuEl.forEach(function (element) {\n    menu = new Menu(element, {\n      orientation: 'vertical',\n      closeChildren: false\n    });\n    // Change parameter to true if you want scroll animation\n    window.Helpers.scrollToActive((animate = false));\n    window.Helpers.mainMenu = menu;\n  });\n\n  // Initialize menu togglers and bind click on each\n  let menuToggler = document.querySelectorAll('.layout-menu-toggle');\n  menuToggler.forEach(item => {\n    item.addEventListener('click', event => {\n      event.preventDefault();\n      window.Helpers.toggleCollapsed();\n    });\n  });\n\n  // Display menu toggle (layout-menu-toggle) on hover with delay\n  let delay = function (elem, callback) {\n    let timeout = null;\n    elem.onmouseenter = function () {\n      // Set timeout to be a timer which will invoke callback after 300ms (not for small screen)\n      if (!Helpers.isSmallScreen()) {\n        timeout = setTimeout(callback, 300);\n      } else {\n        timeout = setTimeout(callback, 0);\n      }\n    };\n\n    elem.onmouseleave = function () {\n      // Clear any timers set to timeout\n      document.querySelector('.layout-menu-toggle').classList.remove('d-block');\n      clearTimeout(timeout);\n    };\n  };\n  if (document.getElementById('layout-menu')) {\n    delay(document.getElementById('layout-menu'), function () {\n      // not for small screen\n      if (!Helpers.isSmallScreen()) {\n        document.querySelector('.layout-menu-toggle').classList.add('d-block');\n      }\n    });\n  }\n\n  // Display in main menu when menu scrolls\n  let menuInnerContainer = document.getElementsByClassName('menu-inner'),\n    menuInnerShadow = document.getElementsByClassName('menu-inner-shadow')[0];\n  if (menuInnerContainer.length > 0 && menuInnerShadow) {\n    menuInnerContainer[0].addEventListener('ps-scroll-y', function () {\n      if (this.querySelector('.ps__thumb-y').offsetTop) {\n        menuInnerShadow.style.display = 'block';\n      } else {\n        menuInnerShadow.style.display = 'none';\n      }\n    });\n  }\n\n  // Init helpers & misc\n  // --------------------\n\n  // Init BS Tooltip\n  const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\n  tooltipTriggerList.map(function (tooltipTriggerEl) {\n    return new bootstrap.Tooltip(tooltipTriggerEl);\n  });\n\n  // Accordion active class\n  const accordionActiveFunction = function (e) {\n    if (e.type == 'show.bs.collapse' || e.type == 'show.bs.collapse') {\n      e.target.closest('.accordion-item').classList.add('active');\n    } else {\n      e.target.closest('.accordion-item').classList.remove('active');\n    }\n  };\n\n  const accordionTriggerList = [].slice.call(document.querySelectorAll('.accordion'));\n  const accordionList = accordionTriggerList.map(function (accordionTriggerEl) {\n    accordionTriggerEl.addEventListener('show.bs.collapse', accordionActiveFunction);\n    accordionTriggerEl.addEventListener('hide.bs.collapse', accordionActiveFunction);\n  });\n\n  // Auto update layout based on screen size\n  window.Helpers.setAutoUpdate(true);\n\n  // Toggle Password Visibility\n  window.Helpers.initPasswordToggle();\n\n  // Speech To Text\n  window.Helpers.initSpeechToText();\n\n  // Manage menu expanded/collapsed with templateCustomizer & local storage\n  //------------------------------------------------------------------\n\n  // If current layout is horizontal OR current window screen is small (overlay menu) than return from here\n  if (window.Helpers.isSmallScreen()) {\n    return;\n  }\n\n  // If current layout is vertical and current window screen is > small\n\n  // Auto update menu collapsed/expanded based on the themeConfig\n  window.Helpers.setCollapsed(true, false);\n})();\n"],"names":["menu","document","querySelectorAll","forEach","element","Menu","orientation","closeChildren","window","Helpers","scrollToActive","mainMenu","item","addEventListener","event","preventDefault","toggleCollapsed","elem","callback","timeout","getElementById","isSmallScreen","querySelector","classList","add","onmouseenter","setTimeout","onmouseleave","remove","clearTimeout","menuInnerContainer","getElementsByClassName","menuInnerShadow","length","this","offsetTop","style","display","slice","call","map","tooltipTriggerEl","bootstrap","Tooltip","accordionActiveFunction","e","type","target","closest","accordionTriggerEl","setAutoUpdate","initPasswordToggle","initSpeechToText","setCollapsed"],"sourceRoot":""}